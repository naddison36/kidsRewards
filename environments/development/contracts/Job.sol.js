// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"approve","outputs":[{"name":"success","type":"bool"},{"name":"error","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"worker","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"reject","outputs":[{"name":"success","type":"bool"},{"name":"error","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"description","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"remainingRewards","outputs":[{"name":"rewards","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"superviser","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"start","outputs":[{"name":"success","type":"bool"},{"name":"error","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"state","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[],"name":"end","outputs":[{"name":"success","type":"bool"},{"name":"error","type":"string"}],"type":"function"},{"inputs":[{"name":"_id","type":"uint256"},{"name":"_description","type":"string"},{"name":"_proposedReqards","type":"uint256"}],"type":"constructor"}],
    binary: "60606040526040516107b83803806107b883398101604052805160805160a05191920190826000600050819055508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e857805160ff19168380011785555b506100949291505b808211156101185760008155600101610080565b50508060056000508190555033600160006101000a815481600160a060020a03021916908302179055506000600460006101000a81548160ff0219169083021790555050505061069c8061011c6000396000f35b82800160010185558215610078579182015b828111156100785782518260005055916020019190600101906100fa565b509056606060405236156100775760e060020a600035046312424e3f811461007f5780634d547ada1461010d5780634dc415de1461011f5780637284e416146101ad578063afb62e561461020b578063b195623814610226578063be9a655514610238578063c19d93fb146102f2578063efbe1c1c146102fe575b6103b1610002565b604080516020810190915260008082526001546103b39290600160a060020a0390811633909116146105f9575060408051606081018252602581527f6f6e6c792074686520737570657276697365722063616e20617070726f76652060208201527f61206a6f620000000000000000000000000000000000000000000000000000009181019190915261052d565b610428600254600160a060020a031681565b604080516020810190915260008082526001546103b39290600160a060020a039081163390911614610688575060408051606081018252602481527f6f6e6c792074686520737570657276697365722063616e2072656a656374206160208201527f206a6f62000000000000000000000000000000000000000000000000000000009181019190915261052d565b6040805160038054602060026001831615610100026000190190921691909104601f810182900482028401820190945283835261044593908301828280156104de5780601f106104b3576101008083540402835291602001916104de565b60055460065490035b60408051918252519081900360200190f35b610428600154600160a060020a031681565b6103b35b604080516020810190915260008082526002805473ffffffffffffffffffffffffffffffffffffffff19163317905560045490919060ff1660011480610287575060045460ff166003145b156104e657505060408051606081018252603d81527f6a6f622063616e206e6f742062652073746172746564207768656e206974277360208201527f20696e20576f726b696e67206f7220417070726f7665642073746174650000009181019190915260009061052d565b61021460045460ff1681565b604080516020810190915260008082526002546103b3929033600160a060020a03908116911614610531575060408051608081018252604c81527f6f6e6c792074686520776f726b65722077686f2073746172746564207468652060208201527f6a6f622063616e20656e6420746865206a6f6220736f20697427732072656164918101919091527f7920666f72207265766965770000000000000000000000000000000000000000606082015261052d565b005b60405180838152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104195780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b505050505081565b50506004805460ff1916600190811790915560408051808201909152600781527f737563636573730000000000000000000000000000000000000000000000000060208201525b9091565b60045460ff16600314156105cb57505060408051608081018252604781527f63616e206e6f7420636f6d706c6574652061206a6f622074686174206861732060208201527f616c7265616479206265656e20617070726f7665642062792074686520737570918101919091527f6572766973657200000000000000000000000000000000000000000000000000606082015260009061052d565b60045460ff16600014156105e4576105e161023c565b50505b6004805460ff19166002179055600191509091565b60045460ff166000141561066d57505060408051606081018252603381527f63616e206e6f7420617070726f76652061206a6f622074686174206120776f7260208201527f6b657220686173206e6f742073746172746564000000000000000000000000009181019190915260009061052d565b6005546006556004805460ff19166003179055600191509091565b6004805460ff19168117905560019150909156",
    unlinked_binary: "60606040526040516107b83803806107b883398101604052805160805160a05191920190826000600050819055508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e857805160ff19168380011785555b506100949291505b808211156101185760008155600101610080565b50508060056000508190555033600160006101000a815481600160a060020a03021916908302179055506000600460006101000a81548160ff0219169083021790555050505061069c8061011c6000396000f35b82800160010185558215610078579182015b828111156100785782518260005055916020019190600101906100fa565b509056606060405236156100775760e060020a600035046312424e3f811461007f5780634d547ada1461010d5780634dc415de1461011f5780637284e416146101ad578063afb62e561461020b578063b195623814610226578063be9a655514610238578063c19d93fb146102f2578063efbe1c1c146102fe575b6103b1610002565b604080516020810190915260008082526001546103b39290600160a060020a0390811633909116146105f9575060408051606081018252602581527f6f6e6c792074686520737570657276697365722063616e20617070726f76652060208201527f61206a6f620000000000000000000000000000000000000000000000000000009181019190915261052d565b610428600254600160a060020a031681565b604080516020810190915260008082526001546103b39290600160a060020a039081163390911614610688575060408051606081018252602481527f6f6e6c792074686520737570657276697365722063616e2072656a656374206160208201527f206a6f62000000000000000000000000000000000000000000000000000000009181019190915261052d565b6040805160038054602060026001831615610100026000190190921691909104601f810182900482028401820190945283835261044593908301828280156104de5780601f106104b3576101008083540402835291602001916104de565b60055460065490035b60408051918252519081900360200190f35b610428600154600160a060020a031681565b6103b35b604080516020810190915260008082526002805473ffffffffffffffffffffffffffffffffffffffff19163317905560045490919060ff1660011480610287575060045460ff166003145b156104e657505060408051606081018252603d81527f6a6f622063616e206e6f742062652073746172746564207768656e206974277360208201527f20696e20576f726b696e67206f7220417070726f7665642073746174650000009181019190915260009061052d565b61021460045460ff1681565b604080516020810190915260008082526002546103b3929033600160a060020a03908116911614610531575060408051608081018252604c81527f6f6e6c792074686520776f726b65722077686f2073746172746564207468652060208201527f6a6f622063616e20656e6420746865206a6f6220736f20697427732072656164918101919091527f7920666f72207265766965770000000000000000000000000000000000000000606082015261052d565b005b60405180838152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104195780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b505050505081565b50506004805460ff1916600190811790915560408051808201909152600781527f737563636573730000000000000000000000000000000000000000000000000060208201525b9091565b60045460ff16600314156105cb57505060408051608081018252604781527f63616e206e6f7420636f6d706c6574652061206a6f622074686174206861732060208201527f616c7265616479206265656e20617070726f7665642062792074686520737570918101919091527f6572766973657200000000000000000000000000000000000000000000000000606082015260009061052d565b60045460ff16600014156105e4576105e161023c565b50505b6004805460ff19166002179055600191509091565b60045460ff166000141561066d57505060408051606081018252603381527f63616e206e6f7420617070726f76652061206a6f622074686174206120776f7260208201527f6b657220686173206e6f742073746172746564000000000000000000000000009181019190915260009061052d565b6005546006556004805460ff19166003179055600191509091565b6004805460ff19168117905560019150909156",
    address: "",
    generated_with: "2.0.8",
    contract_name: "Job"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Job error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Job error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Job error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Job error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Job = Contract;
  }

})();
